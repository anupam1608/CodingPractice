Question :  Given a non-empty string s and a dictionary wordDict containing a list of 
            non-empty words, determine if s can be segmented into a space-separated sequence
            of one or more dictionary words.

            Note:
            The same word in the dictionary may be reused multiple times in the segmentation.
            You may assume the dictionary does not contain duplicate words.
            

Example :   Input: s = "applepenapple", wordDict = ["apple", "pen"]
            Output: true

Solution :  we use dp array of boolean type where dp[i] is true if till ith index string s
            can ce segmentedinto one or more dictionary words. 

            dp[i] is true if    1. dp[j] is true where 0 <= j < i and
                                2. s.substr(j,i-j) is in dictionary

Code :      bool wordBreak(string s, vector<string>& wordDict) {
            if(wordDict.size()==0) return 0;
            vector<bool>dp(s.length()+1,false);
            dp[0] = true;
            
            for(int i=1;i<=s.length();i++){
                for(int j=i-1;j>=0;j--){
                    if(dp[j]){
                        if(find(wordDict.begin(),wordDict.end(),s.substr(j,i-j)) != wordDict.end()){
                            dp[i] = true;
                            break;
                        }
                    }
                }
            }
            return dp[s.length()];
            
        }